// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import context "context"

import eventstore "github.com/onedaycat/zamus/eventstore"
import mock "github.com/stretchr/testify/mock"

// DQL is an autogenerated mock type for the DQL type
type DQL struct {
	mock.Mock
}

// AddEventMsgError provides a mock function with given fields: msg, errStack
func (_m *DQL) AddEventMsgError(msg *eventstore.EventMsg, errStack []string) {
	_m.Called(msg, errStack)
}

// IncreateRetry provides a mock function with given fields:
func (_m *DQL) IncreateRetry() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Save provides a mock function with given fields: ctx
func (_m *DQL) Save(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
