// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import context "context"

import errors "github.com/onedaycat/errors"
import eventstore "github.com/onedaycat/zamus/eventstore"
import mock "github.com/stretchr/testify/mock"

// DQL is an autogenerated mock type for the DQL type
type DQL struct {
	mock.Mock
}

// AddError provides a mock function with given fields: appErr
func (_m *DQL) AddError(appErr errors.Error) {
	_m.Called(appErr)
}

// Retry provides a mock function with given fields:
func (_m *DQL) Retry() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Save provides a mock function with given fields: ctx, msgs
func (_m *DQL) Save(ctx context.Context, msgs []*eventstore.EventMsg) errors.Error {
	ret := _m.Called(ctx, msgs)

	var r0 errors.Error
	if rf, ok := ret.Get(0).(func(context.Context, []*eventstore.EventMsg) errors.Error); ok {
		r0 = rf(ctx, msgs)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(errors.Error)
		}
	}

	return r0
}
